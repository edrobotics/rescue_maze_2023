#include <ultrasonic_sensor.h>
uint8_t sensorPort;
const int DISTANCE_MEASUREMENT_SIZE = 5;

double distanceArray[DISTANCE_MEASUREMENT_SIZE];

// Constructor
UltrasonicSensor::UltrasonicSensor(uint8_t port)
{
    sensorPort = port;
    for (int i=0;i<DISTANCE_MEASUREMENT_SIZE; ++i)
    {
        distanceArray[i] = 0;
    }
}

MeUltrasonicSensor sensor(sensorPort);


void UltrasonicSensor::pushBackArray(double curDistanceData)
{
    for (int i=DISTANCE_MEASUREMENT_SIZE-1; i>0;--i)
    {
        distanceArray[i] = distanceArray[i-1];
    }
    distanceArray[0] = curDistanceData;
}

double UltrasonicSensor::calcDistanceAverage()
{
  double sum = 0;
  for (int i=0;i<DISTANCE_MEASUREMENT_SIZE;++i)
  {
    sum += distanceArray[i];
  }
  return sum/DISTANCE_MEASUREMENT_SIZE;
}

void UltrasonicSensor::update()
{
    pushBackArray(sensor.distanceCm());
    curDistAvg = calcDistanceAverage();
}

void UltrasonicSensor::flushDistanceArray()
{
    for (int i=0;i<DISTANCE_MEASUREMENT_SIZE;++i)
    {
        update();
        delay(20);
    }
}